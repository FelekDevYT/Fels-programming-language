using "fels.lang.sfm"

@class Exceptions
@doc "Exceptions class for handling custom exceptions."
class Exceptions {
    @function ArgumentsMissmatchException
    @doc "Throws an exception for argument mismatches."
    @param text STRING
    @returns NULL
    func ArgumentsMissmatchException(text) {
        panic("ArgumentsMissmatchException: " + text)
    }

    @function OperationIsNotSupportedException
    @doc "Throws an exception for unsupported operations."
    @param text STRING
    @returns NULL
    func OperationIsNotSupportedException(text) {
        panic("OperationIsNotSupportedException: " + text)
    }

    @function PanicException
    @doc "Throws a custom panic exception."
    @param text STRING
    @returns NULL
    func PanicException(text) {
        panic("Custom exception: " + text)
    }

    @function TypeException
    @doc "Throws an exception for type-related issues."
    @param text STRING
    @returns NULL
    func TypeException(text) {
        panic("Type exception: " + text)
    }

    @function felsAPIException
    @doc "Throws an exception specific to the felsAPI module."
    @param name STRING
    @param text STRING
    @returns NULL
    func felsAPIException(name, text) {
        panic("Exception in felsAPI module " + name + " with message: " + text)
    }

    @function FunitException
    @doc "Throws a Funit-specific exception."
    @param message STRING
    @returns NULL
    func FunitException(message) {
        panic("Funit exception: " + message)
    }
}